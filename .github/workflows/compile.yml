name: CI Emscripten

on:
  workflow_dispatch:

env:
  EMCC_SKIP_SANITY_CHECK: '1'

permissions:
  id-token: write
  attestations: write

jobs:
  build-environment:
    name: Build Environment
    runs-on: [self-hosted, linux, x64 ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Install Cache Apt Packages
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: p7zip-full binutils-mips-linux-gnu build-essential pkgconf python3 git zip jq wget curl patch emscripten
          version: 1.0

      - name: Cleanup Environment
        run: |
          rm -fR ./compile
          rm -fR ./output

  get-jobs:
    name: Get Jobs
    needs: build-environment
    runs-on: [self-hosted, linux, x64 ]
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: set-matrix
        run: echo "::set-output name=matrix::$(bash ./build.sh --list --core-names-only | jq -Rsc '. / "\n" - [""]')"

  build-core:
    name: Build Core
    needs: get-jobs
    runs-on: [self-hosted, linux, x64 ]
    continue-on-error: true
    strategy:
      matrix:
        core: ${{fromJson(needs.get-jobs.outputs.matrix)}}
    steps:
      - name: Build Cores
        run: |
          bash build.sh --core=${{ matrix.core }}
  
  package:
    name: Package
    needs: build-core
    runs-on: [self-hosted, linux, x64 ]
    steps:
      - name: Zip files
        run: |
          cd ./output
          zip -r '../cores.zip' *
          cd ..
      
      - uses: actions/attest-build-provenance@v2
        with:
          subject-path: './cores.zip'

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: cores.zip
          path: ./cores.zip
