name: CI Emscripten

on:
  workflow_dispatch:

jobs:
  build-environment:
    name: Build Environment
    runs-on: [self-hosted, linux, x64 ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Install Dependencies
        run: sudo apt install -y p7zip-full binutils-mips-linux-gnu build-essential pkgconf python3 git zip jq wget curl

      - name: Setup Emscripten
        run: "git clone https://github.com/emscripten-core/emsdk.git .emsdk && cd .emsdk && ./emsdk install latest && ./emsdk activate latest && source ./emsdk_env.sh && wget https://raw.githubusercontent.com/EmulatorJS/build/main/emscripten.patch && patch -u -p0 -i emscripten.patch && cd ../"

  get-jobs:
    name: Get Jobs
    needs: build-environment
    runs-on: [self-hosted, linux, x64 ]
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: set-matrix
        run: echo "::set-output name=matrix::$(bash ./build.sh --list --core-names-only | jq -Rsc '. / "\n" - [""]')"
  build-core:
    name: Build Core
    needs: get-jobs
    runs-on: [self-hosted, linux, x64 ]
    strategy:
      max-parallel: 2
      matrix:
        core: ${{fromJson(needs.get-jobs.outputs.matrix)}}
    steps:
      - name: Build Cores
        run: "source ./.emsdk/emsdk_env.sh && bash build.sh --core ${{ matrix.core }}"
  
  package:
    name: Package
    needs: build-core
    runs-on: [self-hosted, linux, x64 ]
    steps:
      - name: Zip files
        run: "zip -r 'cores.zip' ./compile/EmulatorJS/data/cores/*.data"

      - name: Generate checksums
        uses: jmgilman/actions-generate-checksum@v1
        with:
          patterns: |
            ./compile/EmulatorJS/data/cores/*.data